const bel = require('bel')
const icon = require('../../src/node_modules/icon')
const file = require('path').basename(__filename)

module.exports = createAccount

function createAccount ({page, flow = 'layout', name = 'create-new-account'}, protocol) {
    const sender = protocol( get )
    sender({page, from: name , flow, type: 'ready', fn: 'createAccount', file, line: 9 })
    let address = 'hyper://'
    const input = bel`<input type="text" name="custom address" arial-label="Custom address" aria-required="true" value="${address}">`
    const customAddress = bel`<div class="col3 address">${input}</div>`
    const show1 = new icon({name: 'show'})
    const show2 = new icon({name: 'show'})
    const showButton1 = bel`<button role="button" data-state="hide" aria-label="show password" aria-live="assertive" onclick=${(e) => toggleIcon(showButton1, 'password')}>${show1}</button>`
    const showButton2 = bel`<button role="button" data-state="hide" aria-label="show password" aria-live="assertive" onclick=${(e) => toggleIcon(showButton2, 'confirm password')}>${show2}</button>`
    const createAccountElement = bel`
    <div class="form-field" data-step="create-account" aria-label="Create new account">
        <div class="row">
            <label for="chain network">Chain network</label>
            <select role="select" aria-label="Chain network" aria-live="assertive" data-state="main net" onchange=${(e) => handleOnChnage(e.target, e.target.value)}>
                <option role="option" aria-posinset="1" selected>Main net</option>
                <option role="option" aria-posinset="2">Test net</option>
                <option role="option" aria-posinset="3">Custom</option>
            </select>
        </div>
        <div class="row">
            <label for="address">Address</label>
            <span class="address" aria-label="Address">1MCsCUDzzJoGKHgBf2dE76BEWg3emZd9SS</span>
        </div>
        <div class="row">
            <label for="account">Account name</label>
            <input role="input" type="text" name="account" aria-label="Account name" aria-required="true">
        </div>
        <div class="row">
            <label for="password">Password</label>
            <div class="col3">
                <input role="input" type="password" name="password" aria-label="Password" aria-required="true">
                ${showButton1}
            </div>
            <span class="limit">min 8 chars</span>
        </div>
        <div class="row">
            <label for="confirm password">Confirm password</label>
            <div class="col3">
                <input role="input" type="password" name="confirm password" aria-label="Confirm password" aria-required="true">
                ${showButton2}
            </div>
        </div>
    </div>
    `
    return createAccountElement

    function handleOnChnage(target, val) {
        customAddress.remove()
        if (val === 'Custom') {
            target.dataset.state = val.toLowerCase()
            const parent = target.parentElement
            parent.append(customAddress)
        }
    }

    function toggleIcon(el, target) {
        const iconHide = new icon({name: 'hide'})
        const iconShow = new icon({name: 'show'})
        const state = el.dataset.state === 'hide' ? 'show' : 'hide'
        const toggleIcon = state === 'hide' ? iconShow : iconHide 
        const type = state === 'show' ? 'text' : 'password'
        const label = state === 'show' ? 'hide password' : 'show password'
        el.dataset.state = state
        el.ariaLabel = label
        el.replaceChild(toggleIcon, el.querySelector('.icon'))
        createAccountElement.querySelector(`[name="${target}"]`).type = type
        sender({from: target, flow: 'create-account/button', type: 'click', body: state, fn: 'toggleIcon', file, line: 74})
    }

    function get (msg) {
        console.log(msg);
    }
}
